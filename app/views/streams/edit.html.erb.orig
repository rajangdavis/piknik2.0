<% if flash[:notice] %><br><br>
    <div class="text-center bg-danger"><%= flash[:notice] %></div>
<% end %>

<div id="bg_top">

<div id="floating-header">


<div id="header">
<div id="logo_small"></div>

<span id="user_header">
<<<<<<< HEAD
    <% if current_user %>
      <%= link_to "log out", logout_path %> | <%= link_to "my streams", user_path(current_user) %>
    
    <% end %>
=======
		<% if current_user %>
		  <%= link_to "log out", logout_path %><%= link_to "my streams", user_path(current_user) %>
		
		<% end %>
>>>>>>> master
</span>



 <div class="uploadContainer">
<<<<<<< HEAD
    
  <form id='imageForm' action="" method="post" enctype="multipart/form-data">
      <div class="upload">
          <input type="file" id="imgLoader" />
            <div id="makeGif">animate stream</div>
             </div>
  </form>
=======
 		
	<form id='imageForm' action="" method="post" enctype="multipart/form-data">
	    <div class="upload">
	        <input type="file" id="imgLoader" />
	        	<div id="makeGif">animate</div>
	           </div>
	</form>
>>>>>>> master




</div>

</div>
</div>
<div id="gifHolder">
	<img src="" class="gifClass" />
	<div id="smallStreamName">
		<%= @stream.name %>
	</div>
	<div id="deleteGif"></div>
</div>

<div id="streamName"><%= @stream.name %> </div> 
 
<table id="streamsTable" class="container">

  <tbody >
 
  </tbody>
</table>

<<<<<<< HEAD
    <div id="gifHolder">
  <%= form_for(@stream) do |f| %>
    <%= f.hidden_field :url, :id => "gifField" %>
    <%= f.submit "Save Gif"%>
  <% end %>
</div>

 
 
<script type="text/javascript">
=======
		


 
</div>

<script type="text/javascript">

$('#gifHolder').hide();
>>>>>>> master
var image;
$(document).ready(function() {
    var counter = 0;
    function loadImage() {
        counter += 1;
        /////////JQUERY ATTACH NEW HTML TO DOM
        $('#streamsTable').find('tbody')
        .append($('<div class="sort-cell">')
            .append($("<canvas id='canvas" + counter + "' rel='"+counter+"' name='fabric'></canvas>"))
            // .append($("<img src='grid.png' rel='"+counter+"' id='grid'>"))
            .append($("<div rel='"+counter+"' class='scale' id='scale" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='rotate' id='scale" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='sort-handle' id='sort-handle" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='image-settings' id='image-settings" + counter + "'></div>"))
        );
        ///////FABRIC MAKE CANVAS AND IMAGE INSTANCE
var canvas = new fabric.Canvas('canvas' + counter);
  canvas.setHeight(420);
  canvas.setWidth(420);
  canvas.setBackgroundColor('black');
////HIDE ROTATE AND SCALE
$('.scale').hide();
$('.rotate').hide();
<<<<<<< HEAD
=======
$('.delete').hide();




>>>>>>> master
////LOAD IMAGE
document.getElementById('imgLoader').onchange = function handleImage(e) {
    var reader = new FileReader();
    reader.onload = function (event) { console.log('fdsf');
        var imgObj = new Image();
        imgObj.src = event.target.result;
        imgObj.onload = function () {
            // start fabricJS stuff
            
            image = new fabric.Image(imgObj);
            image.set({
              left: 210,
              top: 210,
            originX: 'center',
            originY: 'center',
            hasBorders : false,
            hasControls : false,
            hasRotatingPoint : false,
            });
<<<<<<< HEAD
            canvas.add(image);
            canvas.setActiveObject(image);
            // image.lockMovementX = true;
            // image.lockMovementY = true;
            
            // var gridElement = document.getElementById('.grid');
            // var gridInstance = new fabric.Image(gridElement, {
            // left: 0,
            //   top: 0,
            // });
            // canvas.add(gridInstance );
            
            // end fabricJS stuff
=======

            canvas.calcOffset();
            canvas.add(image);
            canvas.setActiveObject(image);
            $("#streamsTable").css("background-color", "black");

>>>>>>> master
        }
        
    }
    reader.readAsDataURL(e.target.files[0]);
                // $("html, body").animate({ scrollTop: $(document).height() }, 2000);
}
<<<<<<< HEAD
=======



		
>>>>>>> master
        canvas.calcOffset();
        $('.scale[rel='+counter+']').slider({
            animate: "fast",
            orientation: "vertical",
            min: 700,
            max: 1000,
            step: 1,
            value: 800,
            slide: function(event, ui) {
                var activeObject = canvas.getActiveObject();
                if (activeObject) {
                    activeObject.height = ui.value;
                    activeObject.width = ui.value;
                    activeObject.setCoords();
                    canvas.renderAll();
                    localStorage.setItem("Canvas Data",(JSON.stringify(canvas)));
                    
                    // console.log(JSON.stringify(canvas));
                    console.log(JSON.stringify(canvas.toDatalessJSON()));
                    canvas.calcOffset();
                }
            }
        });
        $('.rotate[rel='+counter+']').slider({
            orientation: "vertical",
            animate: "fast",
            min: -30,
            max: 30,
            step: 1,
            value: 0,
            slide: function(event, ui) {
                var activeObject = canvas.getActiveObject();
                if (activeObject) {
                    activeObject.angle = ui.value;
                    activeObject.setCoords();
                    canvas.renderAll();
<<<<<<< HEAD
=======
                    canvas.calcOffset();
>>>>>>> master
                }
            }
        });
    
  $('.image-settings[rel='+counter+']').click(function() {
    $('.scale').toggle();
    $('.rotate').toggle();
    $('.sort-handle').toggle();
<<<<<<< HEAD
=======
    $('.delete').toggle();
    canvas.calcOffset();
>>>>>>> master
    // lockImages();
    // $('#canvas [rel='+counter+']').image.lockMovementX = true;
    // image.lockMovementX = false;
    // image.lockMovementY = false;
  });
<<<<<<< HEAD
=======

  $('.delete[rel='+counter+']').click(function() {

  	$( this.parentNode).remove();

canvas.calcOffset();
  });




>>>>>>> master
};
 
    //////SORTABLE/////
    $("table tbody").sortable({
        handle: '.sort-handle',
        cancel: '',
        // axis: 'y',
        placeholder: "placeholderX"
    }).disableSelection();
  //   function hideButtons(){
  //     $('.scale[rel='+counter+']').hide( "fast", function() {
  //   alert( "Animation complete." )
  //   });
  //      $('.rotate[rel='+counter+']').hide( "fast", function() {
  //   alert( "Animation complete." )
  //   });
  // };
    // $('.image-settings').click(hideButtons);
    $('#imgLoader').click(loadImage);
$('#makeGif').click(function() {
console.log('this is being accessed')
<<<<<<< HEAD
  imageCanvas = document.getElementsByName('fabric');
  var gif = new GIF({
      workers: 4,
      quality: 15,
      width: 640,
      height: 640
  });
  
  for (var i = 0; i <imageCanvas.length; i++) {
    ctx = imageCanvas[i].getContext('2d');
    gif.addFrame(ctx, {copy: true, delay: 100});
  };
gif.on('finished', function(blob) {
    
  var finishedProduct = URL.createObjectURL(blob);
var blobAsDataUrl;
var xhr = new XMLHttpRequest;
xhr.responseType = 'blob';
xhr.onload = function() {
   var recoveredBlob = xhr.response;
   var reader = new FileReader;
   reader.onload = function() {
     blobAsDataUrl = reader.result;
     var finalURL = blobAsDataUrl.replace('data:image/gif;base64,','');
     $.ajax({
    url: 'https://api.imgur.com/3/image',
    type: 'post',
    headers: {
        Authorization: 'Client-ID 86867fc1c1fe7d7'
    },
    data: {
        image: finalURL,
        type: 'base64'
    },
    dataType: 'json',
    success: function(response) {
        if(response.success) {
          var gifField = document.getElementById('gifField');
          var gifHolder = document.getElementById('gifHolder');
          var aTag = document.createElement('a');
          var gif = document.createElement('img');
          aTag.setAttribute('href',response.data.link.replace("http:",""));
          aTag.setAttribute('target','_blank');
          gif.setAttribute('src',response.data.link.replace("http:",""));
          gifField.setAttribute('value',response.data.link.replace("http:",""));
          gifHolder.appendChild(aTag);
          aTag.appendChild(gif);  
        }
    }
});
   };
   reader.readAsDataURL(recoveredBlob);
};
xhr.open('GET', finishedProduct);
xhr.send();
    
  
  });
  gif.render();
  
=======
	imageCanvas = document.getElementsByName('fabric');
	var gif = new GIF({
  		workers: 4,
  		quality: 15,
  		width: 420,
  		height: 420
	});
	

	for (var i = 0; i <imageCanvas.length; i++) {
		ctx = imageCanvas[i].getContext('2d');
		gif.addFrame(ctx, {copy: true, delay: 320});
	};

gif.on('finished', function(blob) {
  	
	
$('#gifHolder').show();	

$('.gifClass').replaceWith('<img src="'+URL.createObjectURL(blob)+'" class="gifClass">');

// $('#gifHolder').append('<img src="'+URL.createObjectURL(blob)+'" class="gifClass">');


// $('#gifHolder').append("<div class='pauseButton'></div>");
	// });
	});


	gif.render();


	
window.scrollTo(0, 0);


>>>>>>> master
});
});
////FUNCTION FOR SAVING A CANVAS TO JPG
// var imageSaver = document.getElementById('imageSaver');
// imageSaver.addEventListener('click', saveImage, false);
// function saveImage(e) {
//     this.href = canvas.to   DataURL({
//         format: 'jpeg',
//         quality: 0.8
//     });
//     this.download = 'test.png'
// }
<<<<<<< HEAD
=======
$('#deleteGif').click(function() {

	$('.gifClass').replaceWith('<img src="" class="gifClass">');
	$('#gifHolder').hide();
});


>>>>>>> master
</script>