
<% if flash[:notice] %><br><br>
    <div class="text-center bg-danger"><%= flash[:notice] %></div>
<% end %>

<div id="bg_top">

<div id="floating-header">


<div id="header">
<div id="logo_small"></div>

<span id="user_header">
		<% if current_user %>
		  <%= link_to "log out", logout_path %><%= link_to "my streams", user_path(current_user) %>
		
		<% end %>
</span>



 <div class="uploadContainer">
 		
	<form id='imageForm' action="" method="post" enctype="multipart/form-data">
	    <div class="upload">
	        <input type="file" id="imgLoader" />
	        	<div id="makeGif">animate</div>
	           </div>
	</form>




</div>

</div>
</div>
<div id="gifHolder">
	<img src="" class="gifClass" />
	<div id="smallStreamName">
		<%= @stream.name %>
	</div>
	<div id="deleteGif"></div>
</div>

<div id="streamName"><%= @stream.name %> </div> 
 
<table id="streamsTable" class="container">

  <tbody >
 
  </tbody>
</table>

		


 
</div>

<script type="text/javascript">

$('#gifHolder').hide();
var image;

$(document).ready(function() {
    var counter = 0;


    function loadImage() {
        counter += 1;

        /////////JQUERY ATTACH NEW HTML TO DOM



        $('#streamsTable').find('tbody')

        .append($('<div class="sort-cell" rel="cell'+counter+'">')
            .append($("<canvas id='canvas" + counter + "' rel='"+counter+"' name='fabric'></canvas>"))
            // .append($("<img src='grid.png' rel='"+counter+"' id='grid'>"))
            .append($("<div rel='"+counter+"' class='scale' id='scale" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='rotate' id='scale" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='delete' id='delete" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='sort-handle' id='sort-handle" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='image-settings' id='image-settings" + counter + "'></div>"))
        );



        ///////FABRIC MAKE CANVAS AND IMAGE INSTANCE

var canvas = new fabric.Canvas('canvas' + counter);
  canvas.setHeight(420);
  canvas.setWidth(420);
  canvas.setBackgroundColor('black');


////HIDE ROTATE AND SCALE

$('.scale').hide();
$('.rotate').hide();
$('.delete').hide();




////LOAD IMAGE


document.getElementById('imgLoader').onchange = function handleImage(e) {
    var reader = new FileReader();
    reader.onload = function (event) { console.log('fdsf');
        var imgObj = new Image();
        imgObj.src = event.target.result;
        imgObj.onload = function () {
            // start fabricJS stuff
            
            image = new fabric.Image(imgObj);
            image.set({
              left: 210,
              top: 210,
            originX: 'center',
            originY: 'center',
            hasBorders : false,
            hasControls : false,
            hasRotatingPoint : false,

            });

            canvas.calcOffset();
            canvas.add(image);
            canvas.setActiveObject(image);
            $("#streamsTable").css("background-color", "black");

        }
        
    }
    reader.readAsDataURL(e.target.files[0]);
                // $("html, body").animate({ scrollTop: $(document).height() }, 2000);
}



		
        canvas.calcOffset();


        $('.scale[rel='+counter+']').slider({
            animate: "fast",
            orientation: "vertical",
            min: 700,
            max: 1000,
            step: 1,
            value: 800,
            slide: function(event, ui) {
                var activeObject = canvas.getActiveObject();
                if (activeObject) {
                    activeObject.height = ui.value;
                    activeObject.width = ui.value;
                    activeObject.setCoords();
                    canvas.renderAll();


                    localStorage.setItem("Canvas Data",(JSON.stringify(canvas)));
                    
                    // console.log(JSON.stringify(canvas));
                    console.log(JSON.stringify(canvas.toDatalessJSON()));
                    canvas.calcOffset();
                }
            }

        });





        $('.rotate[rel='+counter+']').slider({
            orientation: "vertical",
            animate: "fast",
            min: -30,
            max: 30,
            step: 1,
            value: 0,
            slide: function(event, ui) {
                var activeObject = canvas.getActiveObject();
                if (activeObject) {
                    activeObject.angle = ui.value;
                    activeObject.setCoords();
                    canvas.renderAll();
                    canvas.calcOffset();
                }
            }
        });

    
  $('.image-settings[rel='+counter+']').click(function() {
    $('.scale').toggle();
    $('.rotate').toggle();
    $('.sort-handle').toggle();
    $('.delete').toggle();
    canvas.calcOffset();
    // lockImages();
    // $('#canvas [rel='+counter+']').image.lockMovementX = true;
    // image.lockMovementX = false;
    // image.lockMovementY = false;


  });

  $('.delete[rel='+counter+']').click(function() {

  	$( this.parentNode).remove();

canvas.calcOffset();
  });




};

 


    //////SORTABLE/////

    $("table tbody").sortable({
        handle: '.sort-handle',
        cancel: '',
        // axis: 'y',
        placeholder: "placeholderX"

    }).disableSelection();

  //   function hideButtons(){

  //     $('.scale[rel='+counter+']').hide( "fast", function() {
  //   alert( "Animation complete." )
  //   });

  //      $('.rotate[rel='+counter+']').hide( "fast", function() {
  //   alert( "Animation complete." )
  //   });

  // };






    // $('.image-settings').click(hideButtons);


    $('#imgLoader').click(loadImage);


$('#makeGif').click(function() {
console.log('this is being accessed')
	imageCanvas = document.getElementsByName('fabric');
	var gif = new GIF({
  		workers: 4,
  		quality: 15,
  		width: 420,
  		height: 420
	});
	

	for (var i = 0; i <imageCanvas.length; i++) {
		ctx = imageCanvas[i].getContext('2d');
		gif.addFrame(ctx, {copy: true, delay: 320});
	};

gif.on('finished', function(blob) {
  	
	
$('#gifHolder').show();	

$('.gifClass').replaceWith('<img src="'+URL.createObjectURL(blob)+'" class="gifClass">');

// $('#gifHolder').append('<img src="'+URL.createObjectURL(blob)+'" class="gifClass">');


// $('#gifHolder').append("<div class='pauseButton'></div>");
	// });
	});


	gif.render();


	
window.scrollTo(0, 0);


});
});

////FUNCTION FOR SAVING A CANVAS TO JPG

// var imageSaver = document.getElementById('imageSaver');
// imageSaver.addEventListener('click', saveImage, false);

// function saveImage(e) {
//     this.href = canvas.to   DataURL({
//         format: 'jpeg',
//         quality: 0.8
//     });
//     this.download = 'test.png'
// }
$('#deleteGif').click(function() {

	$('.gifClass').replaceWith('<img src="" class="gifClass">');
	$('#gifHolder').hide();
});


</script>