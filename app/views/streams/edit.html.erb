<h1><%= @stream.name %></h1>
<% if flash[:notice] %><br><br>
    <div class="text-center bg-danger"><%= flash[:notice] %></div>
<% end %>

<div class="uploadContainer">
<form action="" method="post" enctype="multipart/form-data">
    <div class="upload">
        <input type="file" id="imgLoader" />
        <a href="#" id="makeGif">make gif</a>

    </div>
</form>
</div>

<div id="gifHolder"></div>
 
<table id="streamsTable" class="container">

  <tbody >
 
  </tbody>
</table>

 
 
<script type="text/javascript">


var image;

$(document).ready(function() {
    var counter = 0;


    function loadImage() {
        counter += 1;

        /////////JQUERY ATTACH NEW HTML TO DOM



        $('#streamsTable').find('tbody')

        .append($('<div class="sort-cell">')
            .append($("<canvas id='canvas" + counter + "' rel='"+counter+"' name='fabric'></canvas>"))
            // .append($("<img src='grid.png' rel='"+counter+"' id='grid'>"))
            .append($("<div rel='"+counter+"' class='scale' id='scale" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='rotate' id='scale" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='sort-handle' id='sort-handle" + counter + "'></div>"))
            .append($("<div rel='"+counter+"' class='image-settings' id='image-settings" + counter + "'></div>"))
        );



        ///////FABRIC MAKE CANVAS AND IMAGE INSTANCE

var canvas = new fabric.Canvas('canvas' + counter);
  canvas.setHeight(640);
  canvas.setWidth(640);
  canvas.setBackgroundColor('black');


////HIDE ROTATE AND SCALE

$('.scale').hide();
$('.rotate').hide();


////LOAD IMAGE


document.getElementById('imgLoader').onchange = function handleImage(e) {
    var reader = new FileReader();
    reader.onload = function (event) { console.log('fdsf');
        var imgObj = new Image();
        imgObj.src = event.target.result;
        imgObj.onload = function () {
            // start fabricJS stuff
            
            image = new fabric.Image(imgObj);
            image.set({
              left: 320,
              top: 320,
            originX: 'center',
            originY: 'center',
            hasBorders : false,
            hasControls : false,
            hasRotatingPoint : false,

            });


            canvas.add(image);
            canvas.setActiveObject(image);

            // image.lockMovementX = true;
            // image.lockMovementY = true;

            
            // var gridElement = document.getElementById('.grid');
            // var gridInstance = new fabric.Image(gridElement, {
            // left: 0,
            //   top: 0,
            // });
            // canvas.add(gridInstance );

            
            // end fabricJS stuff
        }
        
    }
    reader.readAsDataURL(e.target.files[0]);
}




        canvas.calcOffset();


        $('.scale[rel='+counter+']').slider({
            animate: "fast",
            orientation: "vertical",
            min: 700,
            max: 1000,
            step: 1,
            value: 800,
            slide: function(event, ui) {
                var activeObject = canvas.getActiveObject();
                if (activeObject) {
                    activeObject.height = ui.value;
                    activeObject.width = ui.value;
                    activeObject.setCoords();
                    canvas.renderAll();


                    localStorage.setItem("Canvas Data",(JSON.stringify(canvas)));
                    
                    // console.log(JSON.stringify(canvas));
                    console.log(JSON.stringify(canvas.toDatalessJSON()));
                    
                }
            }

        });





        $('.rotate[rel='+counter+']').slider({
            orientation: "vertical",
            animate: "fast",
            min: -30,
            max: 30,
            step: 1,
            value: 0,
            slide: function(event, ui) {
                var activeObject = canvas.getActiveObject();
                if (activeObject) {
                    activeObject.angle = ui.value;
                    activeObject.setCoords();
                    canvas.renderAll();

                }
            }
        });

    
  $('.image-settings[rel='+counter+']').click(function() {
    $('.scale').toggle();
    $('.rotate').toggle();
    $('.sort-handle').toggle();
    // lockImages();
    // $('#canvas [rel='+counter+']').image.lockMovementX = true;
    // image.lockMovementX = false;
    // image.lockMovementY = false;


  });




};

 


    //////SORTABLE/////

    $("table tbody").sortable({
        handle: '.sort-handle',
        cancel: '',
        axis: 'y',
        placeholder: "placeholderX"

    }).disableSelection();

  //   function hideButtons(){

  //     $('.scale[rel='+counter+']').hide( "fast", function() {
  //   alert( "Animation complete." )
  //   });

  //      $('.rotate[rel='+counter+']').hide( "fast", function() {
  //   alert( "Animation complete." )
  //   });

  // };






    // $('.image-settings').click(hideButtons);


    $('#imgLoader').click(loadImage);


$('#makeGif').click(function() {
console.log('this is being accessed')
	imageCanvas = document.getElementsByName('fabric');
	var gif = new GIF({
  		workers: 4,
  		quality: 15,
  		width: 640,
  		height: 640
	});
	

	for (var i = 0; i <imageCanvas.length; i++) {
		ctx = imageCanvas[i].getContext('2d');
		gif.addFrame(ctx, {copy: true, delay: 100});
	};

gif.on('finished', function(blob) {
  	
	var finishedProduct = URL.createObjectURL(blob);

var blobAsDataUrl;
var xhr = new XMLHttpRequest;
xhr.responseType = 'blob';

xhr.onload = function() {
   var recoveredBlob = xhr.response;

   var reader = new FileReader;

   reader.onload = function() {
     blobAsDataUrl = reader.result;
     var finalURL = blobAsDataUrl.replace('data:image/gif;base64,','');
     $.ajax({
    url: 'https://api.imgur.com/3/image',
    type: 'post',
    headers: {
        Authorization: 'Client-ID 86867fc1c1fe7d7'
    },
    data: {
        image: finalURL,
        type: 'base64'
    },
    dataType: 'json',
    success: function(response) {
        if(response.success) {
          var gifHolder = document.getElementById('gifHolder');
          var aTag = document.createElement('a');
          var gif = document.createElement('img');
          aTag.setAttribute('href',response.data.link);
          aTag.setAttribute('target','_blank');
          gif.setAttribute('src',response.data.link);
          gifHolder.appendChild(aTag);
          aTag.appendChild(gif);  
        }
    }
});
   };

   reader.readAsDataURL(recoveredBlob);
};

xhr.open('GET', finishedProduct);
xhr.send();
    

  

	});

	gif.render();




	



});
});

////FUNCTION FOR SAVING A CANVAS TO JPG

// var imageSaver = document.getElementById('imageSaver');
// imageSaver.addEventListener('click', saveImage, false);

// function saveImage(e) {
//     this.href = canvas.to   DataURL({
//         format: 'jpeg',
//         quality: 0.8
//     });
//     this.download = 'test.png'
// }



</script>